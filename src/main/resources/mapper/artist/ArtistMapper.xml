<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.teamprojeect.mapper.artist.ArtistMapper">

    <!-- 아티스트 등록 신청 (status 1) -->
    <insert id="insertApply">
        INSERT INTO TBL_ARTIST
        (ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE, ARTIST_DONATION, ARTIST_ACCOUNT, ARTIST_STATUS)
        VALUES(SEQ_ARTIST.NEXTVAL, #{userNumber}, #{artistName}, #{artistDescription}, #{artistType}, #{artistDonation}, #{artistAccount}, 1)
    </insert>

    <!--관리자 등록 승인 (status -> 3)-->
    <update id="insertAdmin">
        UPDATE TBL_ARTIST
        SET ARITST_STATUS = 3
        WHERE ARTIST_NUMBER = #{artistNumber}
    </update>

    <!--아티스트 정보 수정 신청 (status 2)-->
    <update id="updateApply">
        UPDATE TBL_ARTIST
        SET ARTIST_NAME = #{artistName}, ARTIST_DESCRIPTION = #{artistDescription}, ARTIST_TYPE = #{artistType}, ARTIST_DONATION = #{artistDonation},
         ARTIST_ACCOUNT = #{artistAccount}, ARITST_STATUS = 2
        WHERE ARTIST_NUMBER = #{artistNumber}
    </update>

    <!--관리자 수정 승인 (status -> 3)--> <!---->
    <update id="updateAdmin">
        UPDATE TBL_ARTIST
        SET ARITST_STATUS = 3
        WHERE ARTIST_NUMBER = #{artistNumber}
    </update>

    <!--아티스트 삭제--> <!---->
    <update id="delete">
        UPDATE TBL_ARTIST SET ARITST_STATUS = 4 WHERE ARTIST_NUMBER = #{artistNumber}
    </update>




<!--    <select id="getList" resultType="artistVO">-->
<!--        SELECT-->
<!--        <trim prefix="a.*">-->
<!--            <choose>-->
<!--                <when test="listDTO.artistSortingType == 'NEW'.toString()">-->
<!--                    FROM TBL_ARTIST a ORDER BY a.ARTIST_NUMBER DESC-->
<!--                </when>-->
<!--                <when test="listDTO.artistSortingType == 'LIKE'.toString()">-->
<!--                    , likescount-->
<!--                    FROM (-->
<!--                    SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount-->
<!--                    FROM TBL_LIKE GROUP BY ARTIST_NUMBER ORDER BY likescount DESC-->
<!--                    ) l-->
<!--                    JOIN TBL_ARTIST a-->
<!--                    ON a.ARTIST_NUMBER = l.ARTIST_NUMBER-->
<!--                    ORDER BY LIKESCOUNT DESC-->
<!--                </when>-->
<!--            </choose>-->
<!--        </trim>-->
    <select id="getList" resultType="artistVO">
        SELECT ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE
            <choose>
                <when test="listDTO.artistSortingType == 'NEW'.toString()">
                    FROM (
                            SELECT ROWNUM RN, ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE
                    FROM (
                            SELECT a.ARTIST_NUMBER, a.USER_NUMBER, a.ARTIST_NAME, a.ARTIST_DESCRIPTION , a.ARTIST_TYPE FROM TBL_ARTIST a
                            ORDER BY a.ARTIST_NUMBER DESC
                        )
                </when>
                <when test="listDTO.artistSortingType == 'LIKE'.toString()">
                    , likescount
                    FROM (
                    SELECT ROWNUM RN, ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE

                    FROM (
                            (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount
                            FROM TBL_LIKE GROUP BY ARTIST_NUMBER ORDER BY likescount DESC ) l JOIN TBL_ARTIST a
                            ON a.ARTIST_NUMBER = l.ARTIST_NUMBER
                            ORDER BY LIKESCOUNT DESC
                        )
                </when>
            </choose>
            <![CDATA[
                WHERE ROWNUM <= #{criteria.pageNum} * #{criteria.amount}
                )
                WHERE RN > (#{criteria.pageNum} - 1) * #{criteria.amount}
            ]]>
    </select>

    <select id="getArtistTotal" resultType="_int">
        SELECT COUNT(*) FROM TBL_ARTIST
    </select>

    <select id="getListMusician" resultType="artistVO">
        SELECT
        <trim prefix="a.*">
            <choose>
                <when test="listDTO.artistSortingType == 'NEW'.toString()">
                    FROM TBL_ARTIST a WHERE a.ARTIST_TYPE = 1 ORDER BY a.ARTIST_NUMBER DESC
                </when>
                <when test="listDTO.artistSortingType == 'LIKE'.toString()">
                    , likescount
                    FROM (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount
                    FROM TBL_LIKE GROUP BY ARTIST_NUMBER ORDER BY likescount DESC) l JOIN TBL_ARTIST a
                    ON a.ARTIST_NUMBER = l.ARTIST_NUMBER
                    WHERE a.ARTIST_TYPE = 1
                    ORDER BY LIKESCOUNT DESC
                </when>
            </choose>
        </trim>
    </select>

    <select id="getListPerformance" resultType="artistVO">
        SELECT
        <trim prefix="a.*">
            <choose>
                <when test="listDTO.artistSortingType == 'NEW'.toString()">
                    FROM TBL_ARTIST a WHERE a.ARTIST_TYPE = 2 ORDER BY a.ARTIST_NUMBER DESC
                </when>
                <when test="listDTO.artistSortingType == 'LIKE'.toString()">
                    , likescount
                    FROM (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount
                    FROM TBL_LIKE GROUP BY ARTIST_NUMBER ORDER BY likescount DESC) l JOIN TBL_ARTIST a
                    ON a.ARTIST_NUMBER = l.ARTIST_NUMBER
                    WHERE a.ARTIST_TYPE = 2
                    ORDER BY LIKESCOUNT DESC
                </when>
            </choose>
        </trim>
    </select>


    <select id="getList2" resultType="artistVO">
        SELECT ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE  , likescount

        FROM (
                SELECT ROWNUM RN, ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE

                FROM (
                (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount
                FROM TBL_LIKE GROUP BY ARTIST_NUMBER ORDER BY likescount DESC ) l JOIN TBL_ARTIST a
                ON a.ARTIST_NUMBER = l.ARTIST_NUMBER
                ORDER BY LIKESCOUNT DESC
                )
        <![CDATA[
                WHERE ROWNUM <= #{criteria.pageNum} * #{criteria.amount}
                )
                WHERE RN > (#{criteria.pageNum} - 1) * #{criteria.amount}
            ]]>
    </select>




<!--강래시작-->



<!--랭킹 전체-->

<!--    <select id="rankingList" resultType="artistVO">-->
<!--        SELECT a.* , likescount-->
<!--        FROM (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount-->
<!--        FROM TBL_LIKE-->
<!--            <choose>-->
<!--                <when test="listDTO.rankingSortingDate == 'week'.toString()">-->
<!--                    WHERE TO_CHAR(LIKE_DATE, 'MM-DD') = #{listDTO.detailDate}-->
<!--                </when>-->
<!--                <when test="listDTO.rankingSortingDate == 'month'.toString()">-->
<!--                    WHERE TO_CHAR(LIKE_DATE, 'YYYY-MM') = #{listDTO.detailDate}-->
<!--                </when>-->
<!--                <when test="listDTO.rankingSortingDate == 'year'.toString()">-->
<!--                    WHERE TO_CHAR(LIKE_DATE, 'YYYY') = #{listDTO.detailDate}-->
<!--                </when>-->
<!--            </choose>-->
<!--        GROUP BY ARTIST_NUMBER ORDER BY likescount DESC) l JOIN TBL_ARTIST a-->
<!--        ON a.ARTIST_NUMBER = l.ARTIST_NUMBER-->
<!--        ORDER BY LIKESCOUNT DESC-->
<!--    </select>-->




<!--랭킹 뮤지션-->

    <select id="rankingList" resultType="artistVO">
        SELECT a.* , likescount
        FROM (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount
        FROM TBL_LIKE
        <choose>
            <when test="listDTO.rankingSortingDate == 'week'.toString()">
--                 WHERE TO_CHAR(LIKE_DATE, 'YYYYMM') = #{listDTO.detailDate}
--                 (사용자가 화면에서 #년월 #주차)
--                 AND (SELECT ceil((to_number(substrb(TO_DATE(LIKE_DATE,'YYYYMMDD'), -2, 2) + 7 - to_number(TO_CHAR(TO_DATE(LIKE_DATE,'YYYYMMDD'),'D')))/7)
--                 from dual;)) =#{listDTO.weekly}
            </when>
            <when test="listDTO.rankingSortingDate == 'month'.toString()">
                WHERE TO_CHAR(LIKE_DATE, 'YYYY-MM') = #{listDTO.detailDate}
            </when>
            <when test="listDTO.rankingSortingDate == 'year'.toString()">
                WHERE TO_CHAR(LIKE_DATE, 'YYYY') = #{listDTO.detailDate}
            </when>
        </choose>
        GROUP BY ARTIST_NUMBER ORDER BY likescount DESC) l JOIN TBL_ARTIST a
        ON a.ARTIST_NUMBER = l.ARTIST_NUMBER
                WHERE a.ARTIST_TYPE = 1
        ORDER BY LIKESCOUNT DESC
    </select>



<!--랭킹 퍼포먼스-->

<!--    <select id="rankingList" resultType="artistVO">-->
<!--        SELECT a.* , likescount-->
<!--        FROM (SELECT ARTIST_NUMBER, COUNT(ARTIST_NUMBER) as likescount-->
<!--        FROM TBL_LIKE-->
<!--        <choose>-->
<!--            <when test="listDTO.rankingSortingDate == 'week'.toString()">-->
<!--                WHERE TO_CHAR(LIKE_DATE, 'MM-DD') = #{listDTO.detailDate}-->
<!--            </when>-->
<!--            <when test="listDTO.rankingSortingDate == 'month'.toString()">-->
<!--                WHERE TO_CHAR(LIKE_DATE, 'YYYY-MM') = #{listDTO.detailDate}-->
<!--            </when>-->
<!--            <when test="listDTO.rankingSortingDate == 'year'.toString()">-->
<!--                WHERE TO_CHAR(LIKE_DATE, 'YYYY') = #{listDTO.detailDate}-->
<!--            </when>-->
<!--        </choose>-->
<!--        GROUP BY ARTIST_NUMBER ORDER BY likescount DESC) l JOIN TBL_ARTIST a-->
<!--        ON a.ARTIST_NUMBER = l.ARTIST_NUMBER-->
<!--                WHERE a.ARTIST_TYPE = 2 퍼포먼스-->
<!--        ORDER BY LIKESCOUNT DESC-->
<!--    </select>-->




<!--강래 끝-->






    <!--아티스트 목록 개수-->


    <!--랭킹 목록-->
<!--    <select id="rankingList" resultType="artistVO">-->

<!--    </select>-->

    <!--랭킹 목록 개수-->
    <select id="getTotal" resultType="_int">
        SELECT COUNT(*) FROM TBL_ARTIST

    </select>

    <!--아티스트 상세 정보-->
    <select id="getDetail" resultType="artistVO">
        SELECT ARTIST_NUMBER, USER_NUMBER, ARTIST_NAME, ARTIST_DESCRIPTION, ARTIST_TYPE, ARTIST_DONATION, ARTIST_ACCOUNT, ARTIST_STATUS
        FROM TBL_ARTIST
        WHERE ARTIST_NUMBER = #{artistNumber}
    </select>

</mapper>